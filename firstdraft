import pandas as pd
from io import StringIO

def generate_sql_in_query_from_text(raw_text: str, table_name: str) -> str:
    """
    从 Excel 粘贴的文本中提取 employer_account_code 和 member_account_code，
    自动去除.0浮点，生成单条SQL语句，使用 IN (...) 一次性查询所有匹配记录。
    """
    # 嵌套函数：格式化 ID，去除浮点型的 .0
    def format_id(value):
        if pd.isna(value):
            return None
        if isinstance(value, float) and value.is_integer():
            return str(int(value))
        return str(value).strip()

    # 读取 Excel 复制的文本内容
    df = pd.read_csv(StringIO(raw_text), sep='\t')

    # 收集两类ID
    employer_ids = set()
    member_ids = set()

    for _, row in df.iterrows():
        emp_id = format_id(row.get("employer_account_code"))
        mem_id = format_id(row.get("member_account_code"))
        if emp_id:
            employer_ids.add(emp_id)
        if mem_id:
            member_ids.add(mem_id)

    # 构造 IN (...) 部分
    emp_part = ""
    mem_part = ""
    
    if employer_ids:
        emp_list = "', '".join(sorted(employer_ids))
        emp_part = f"employer_account_code IN ('{emp_list}')"
    
    if member_ids:
        mem_list = "', '".join(sorted(member_ids))
        mem_part = f"member_account_code IN ('{mem_list}')"

    # 组合 WHERE 条件
    if emp_part and mem_part:
        where_clause = f"WHERE {emp_part} OR {mem_part}"
    elif emp_part:
        where_clause = f"WHERE {emp_part}"
    elif mem_part:
        where_clause = f"WHERE {mem_part}"
    else:
        return "-- No valid employer or member account codes found."

    # 返回最终 SQL 查询
    sql = f"SELECT * FROM {table_name} {where_clause};"
    return sql

SELECT scheme_code, account_type, employer_account_code, member_account_code, ...
FROM ra_rebate_details_account
WHERE employer_account_code IN ('20000100', '20000101', '8800000')
   OR member_account_code IN ('200100010', '200100011');

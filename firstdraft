import re

def generate_full_column_sql_query(table_name, input_text):
    lines = [line.strip() for line in input_text.strip().split('\n') if line.strip()]
    if not lines:
        return f"SELECT * FROM {table_name} /* No data provided */"

    # 获取所有列名
    columns = re.split(r'\s+', lines[0])

    # 解析数据行
    data_rows = []
    for line in lines[1:]:
        row = re.split(r'\s+', line)
        if len(row) < len(columns):
            row += [''] * (len(columns) - len(row))
        data_rows.append(row[:len(columns)])

    # 构建 WHERE 的值列表
    where_values = []
    for row in data_rows:
        values = []
        for val in row:
            val = val.strip()
            values.append('NULL' if val == '' else f"'{val}'")
        where_values.append(f"    ({', '.join(values)})")

    # 构建 SQL 查询语句
    select_clause = ",\n    ".join(columns)
    where_clause = f"({', '.join(columns)}) IN (\n{',\n'.join(where_values)}\n)"

    sql = f"""SELECT
    {select_clause}
FROM {table_name}
WHERE {where_clause};
"""
    return sql



SELECT
    scheme_code,
    account_type,
    employer_account_code,
    member_account_code,
    regular_rebate_applicable,
    annual_rebate_applicable,
    regular_rebate_distribution_subacct,
    regular_rebate_distribution_fund,
    regular_rebate_calculation_option,
    regular_rebate_allow_rollover,
    annual_rebate_allow_rollover,
    source_employer_code,
    record_creation_datetime,
    record_created_by,
    record_last_update_datetime,
    record_last_updated_by,
    delete_flag
FROM ra_rebate_details_account
WHERE (scheme_code, account_type, employer_account_code, member_account_code, regular_rebate_applicable, annual_rebate_applicable, regular_rebate_distribution_subacct, regular_rebate_distribution_fund, regular_rebate_calculation_option, regular_rebate_allow_rollover, annual_rebate_allow_rollover, source_employer_code, record_creation_datetime, record_created_by, record_last_update_datetime, record_last_updated_by, delete_flag) IN (
    ('RB', 'ER', '20000100', 'Y', 'N', 'Default', 'Benefits', 'As', 'per', 'Investment', 'Mandate', 'NAV', 'Y', '(5', 'years)', 'Y', '2025-01-01'),
    ('RB', 'ER', '20000101', 'N', 'N', 'Default', 'Benefits', 'As', 'per', 'Investment', 'Mandate', 'NAV', 'Y', '(5', 'years)', 'Y', '2025-01-01'),
    ('RB', 'ER', '20000102', 'Y', 'Y', 'Default', 'Benefits', 'As', 'per', 'Investment', 'Mandate', 'NAV', 'Y', '(5', 'years)', 'Y', '2025-01-01'),
    ('RB', 'ER', '20000103', 'Y', 'Y', 'Default', 'Benefits', 'As', 'per', 'Investment', 'Mandate', 'NAV', 'Y', '(5', 'years)', 'N', '2025-01-01'),
    ('RB', 'ER', '20000104', 'Y', 'N', 'Default', 'Benefits', 'As', 'per', 'Investment', 'Mandate', 'NAV', 'Y', '(5', 'years)', 'Y', '2025-01-01'),
    ('RB', 'PAH', '200100014', 'Y', 'N', 'Default', 'Benefits', 'As', 'per', 'Investment', 'Mandate', 'NAV', '2025-01-01', '00:00:00', 'SYSTEM', '2025-01-01', '00:00:00'),
    ('RB', 'ER', '20000105', 'Y', 'N', 'Default', 'Benefits', 'As', 'per', 'Investment', 'Mandate', 'NAV', 'Y', '(5', 'years)', 'Y', '2025-01-01'),
    ('RB', 'PAH', '200100015', 'N', 'Y', 'Default', 'Benefits', 'As', 'per', 'Investment', 'Mandate', 'NAV', '2025-01-01', '00:00:00', 'SYSTEM', '2025-01-01', '00:00:00')
);

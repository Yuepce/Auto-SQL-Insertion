import re, datetime

def _fmt_cell(v: str) -> str:
    """内部：把一个单元格字符串转换为 SQL value。"""
    v = v.strip()
    if v == "" or v.upper() == "NULL":
        return "NULL"
    if re.fullmatch(r"\d{8}", v):                      # YYYYMMDD
        return f"'{v[:4]}-{v[4:6]}-{v[6:]}'"
    if re.fullmatch(r"\d{14}", v):                     # YYYYMMDDhhmmss
        return f"'{v[:4]}-{v[4:6]}-{v[6:8]} {v[8:10]}:{v[10:12]}:{v[12:]}'"
    if re.fullmatch(r"\d{2}-[A-Za-z]{3}-\d{2}", v):    # 01-Oct-22
        dt = datetime.datetime.strptime(v, "%d-%b-%y")
        return f"'{dt:%Y-%m-%d}'"
    if re.fullmatch(r"\d{1,2}:\d{2}", v):              # 9:00
        hh, mm = map(int, v.split(":"))
        return f"'{hh:02d}:{mm:02d}:00'"
    if re.fullmatch(r"-?\d+(\.\d+)?", v):              # 数字
        return v
    return "'" + v.replace("'", "''") + "'"            # 字符串并转义 '

def generate_insert_sql(
    table_name: str,
    raw_text: str,
    extra_flag: str = "Y",           # "Y" → 追加两列；"N" → 不追加
    eff_date: str = "2024-01-01",
    created_by: str = "SYSTEM",
) -> str:
    """
    Excel (Tab 分隔) 文本 → 批量 INSERT 语句
    
    Parameters
    ----------
    table_name : str
    raw_text   : str   复制于 Excel 的原始文本（含列名行）
    extra_flag : str   "Y" / "N" 是否追加 record_effective_datetime & record_created_by
    eff_date   : str   若追加，两列中第一列的常量值
    created_by : str   若追加，两列中第二列的常量值
    """
    add_extra = (extra_flag.strip().upper() == "Y")
    raw_text = raw_text.strip()
    if not raw_text:
        raise ValueError("raw_text 为空，可能没有正确复制数据")
    
    # 1) 拆行、表头
    rows: List[List[str]] = [r.split("\t") for r in raw_text.splitlines()]
    while rows and not any(c.strip() for c in rows[0]):   # 跳过前置空行
        rows.pop(0)
    if not rows:
        raise ValueError("未检测到列名行")
    
    base_cols = [c.strip() for c in rows[0]]
    data_rows = rows[1:]
    
    # 2) 组装 VALUES
    values = []
    for r in data_rows:
        if not any(cell.strip() for cell in r):           # 整行空白 → 跳过
            continue
        r = r + [""] * (len(base_cols) - len(r))          # 补齐缺列
        fmt_row = [_fmt_cell(c) for c in r]
        if add_extra:
            fmt_row += [f"'{eff_date}'", f"'{created_by}'"]
        values.append("  (" + ", ".join(fmt_row) + ")")
    
    if not values:
        raise ValueError("没有可插入的数据行")
    
    all_cols = base_cols + (["record_effective_datetime", "record_created_by"] if add_extra else [])
    return f"INSERT INTO {table_name} ({', '.join(all_cols)}) VALUES\n" + ",\n".join(values) + ";" 


## input text
sample_text = """SCHEME_CD	EMPLR_ACCT_CD	ACCOUNT_TYPE	company_group_cd	ENROL_REF_NO	COMPANY_NM	STATUS_CD	DUMMY_ACCT_FLG	fund_clss_typ_id	delete_flag
RB	6000020	ER	CD6000000020	REF6000020	Hello Company	ACTIVE	Y	B	N
RB	6000021	ER	CD6000000021	REF6000021	World Company	ACTIVE	Y	A	N
RB	6000022	ER	CD6000000022	REF6000022	Smile Company	ACTIVE	Y	B	N
RB	6000023	ER	CD6000000023	REF6000023	Sunny Company	ACTIVE	Y	A	N
RB	6000024	ER	CD6000000024	REF6000024	Winter Company	ACTIVE		A	N
									
									
									
									
RB	6000025	ER	CD6000000025	REF6000025	Summer Company	ACTIVE	Y	A	N
RB	6000026	ER	CD6000000026	REF6000026	Holiday Inn Company	ACTIVE	Y	A	N
RB	6000027	ER	CD6000000027	REF6000027	Autumn Company	ACTIVE	Y	A	N
RB	6000028	ER	CD6000000028	REF6000028	Rainy Company	ACTIVE	Y	A	N
RB	6000029	ER	CD6000000029	REF6000029	Thunder Company	ACTIVE	Y	A	N
RB	6000030	ER	CD6000000030	REF6000030	Windy Company	ACTIVE	Y	A	N
RB	6000031	ER	CD6000000031	REF6000031	Snowy Company	ACTIVE	Y	A	Y"""


# ① 需要追加两列
sql1 = generate_insert_sql("attendance", sample_text, extra_flag="Y")
print(sql1)

# ② 不追加两列
sql2 = generate_insert_sql("attendance", sample_text, extra_flag="N")
print(sql2)

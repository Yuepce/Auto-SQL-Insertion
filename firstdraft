def generate_sql_strict_by_column_position(table_name, input_text, where_cols):
    import re

    # Step 1: 预处理：分行并清洗（支持粘贴空格或tab）
    lines = [re.sub(r'\s+', '\t', line.strip()) for line in input_text.strip().splitlines() if line.strip()]
    
    # Step 2: 拿到列名 & 列数
    header = lines[0].split('\t')
    num_cols = len(header)
    where_indices = [header.index(col) for col in where_cols]

    # Step 3: 处理每一行：即使字段缺失，也补齐为列数
    rows = []
    for line in lines[1:]:
        row = line.split('\t')
        if all(cell.strip() == '' for cell in row):
            continue
        row = [cell.strip() for cell in row]
        if len(row) < num_cols:
            row += [''] * (num_cols - len(row))
        else:
            row = row[:num_cols]
        rows.append(row)

    # Step 4: 构造 WHERE 子句
    conditions = []
    for row in rows:
        clause = []
        for i in where_indices:
            val = row[i]
            clause.append(f"{header[i]} IS NULL" if val == '' else f"{header[i]} = '{val}'")
        conditions.append("    (" + " AND ".join(clause) + ")")

    # Step 5: 拼接 SQL
    select_clause = ",\n    ".join(header)
    where_clause = "\nOR\n".join(conditions)

    sql = f"""SELECT
    {select_clause}
FROM {table_name}
WHERE (
{where_clause}
);
"""
    return sql

sql = generate_sql_strict_by_column_position(
    table_name="ra_rebate_details_funds",
    input_text=your_input_text,
    where_cols=["employer_account_code", "member_account_code"]
)
print(sql)

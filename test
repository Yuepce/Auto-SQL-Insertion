import re
import pandas as pd

def parse_test_cases_from_text(raw_text: str, column_names: list, output_path: str):
    """
    从纯文本中提取测试用例字段并保存为 Excel，每一列对应一个字段（支持 Markdown 和普通字段名）。
    """

    # 拆分每条 test case block，包含编号和 Test Case ID
    pattern = r'\n?\s*\d+\.\s*\*?\*?Test Case ID\*?\*?:\s*(.+?)\n'
    matches = list(re.finditer(pattern, raw_text))
    test_cases = []

    for i, match in enumerate(matches):
        # 当前 Test Case ID
        case_id = match.group(1).strip()

        # 获取当前 block 的起止位置
        start_idx = match.end()
        end_idx = matches[i + 1].start() if i + 1 < len(matches) else len(raw_text)
        block_text = raw_text[start_idx:end_idx]

        record = {}
        record["Test Case ID"] = case_id  # 主键字段

        for col in column_names:
            # 匹配字段段落
            col_pattern = rf'(?:\*\*)?{re.escape(col)}(?:\*\*)?:\s*(.*?)(?=\n\s*\*?[A-Z][^:]*?:|\Z)'
            match_col = re.search(col_pattern, block_text, re.DOTALL)
            if match_col:
                content = match_col.group(1).strip()
                content = re.sub(r'\n\s*-\s*', '\n- ', content)  # 美化项目符号
                record[col] = content
            else:
                record[col] = ""

        test_cases.append(record)

    # 写入 Excel
    df = pd.DataFrame(test_cases)
    df.to_excel(output_path, index=False)
    print(f"✅ 提取成功！共 {len(df)} 条记录导出至 {output_path}")

# ✅ 示例调用
if __name__ == "__main__":
    raw_text = """
1. **Test Case ID**: GOV_Term_P01
**Rule Reference**: Report Criteria #1.1, #1.2
**Interpretation**:
- Status must be "TERMD"
- Date within range
**Expected Result**: Member included

2. **Test Case ID**: GOV_Term_P02
**Rule Reference**: Report Criteria #3.2
**Interpretation**:
- Uses latest balance record
**Expected Result**: Correct value shown
    """

    # 所有字段列（Test Case ID 现在也作为正式字段）
    column_names = ["Rule Reference", "Interpretation", "Expected Result"]
    output_path = "Parsed_Test_Cases.xlsx"

    parse_test_cases_from_text(raw_text, column_names, output_path)

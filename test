import re
import pandas as pd

def parse_test_cases(raw_text: str, column_names: list, output_path: str):
    """
    从纯文本中提取测试用例信息，并导出为Excel。

    参数:
    - raw_text: str，原始的纯文本内容
    - column_names: list，用户指定的字段列表，如 ['Test Case ID', 'Rule Reference', 'Interpretation', 'Expected Result']
    - output_path: str，输出Excel文件路径
    """
    # 构造正则模式，每个字段匹配以 "<字段名>:" 开头的行
    pattern = r'(Test Case ID: .+?)(?=Test Case ID: |\Z)'  # 每段以 Test Case ID 开头
    case_blocks = re.findall(pattern, raw_text, flags=re.DOTALL)

    cases = []
    for block in case_blocks:
        case_data = {}
        for col in column_names:
            # 捕获格式: 字段名: 内容（直到下一个字段或结尾）
            col_pattern = rf'{col}:\s*(.+?)(?=\n[A-Z][a-zA-Z ]+?:|\Z)'  # 捕获当前字段的值
            match = re.search(col_pattern, block, flags=re.DOTALL)
            case_data[col] = match.group(1).strip() if match else ""
        cases.append(case_data)

    # 输出为 Excel
    df = pd.DataFrame(cases)
    df.to_excel(output_path, index=False)
    print(f"✅ 输出成功: {output_path}")

# 示例用法：
if __name__ == "__main__":
    # 示例纯文本（请替换为粘贴内容）
    text_input = """
Test Case ID: GOV_Term_P01
Rule Reference: Rule#1.1
Interpretation: Terminated member with valid conditions
Expected Result: Member included in report

Test Case ID: GOV_Term_P02
Rule Reference: Rule#3
Interpretation: ERVC and ERVC2 balances calculated
Expected Result: Redemption shown for both sub-account types
"""

    # 自定义列名（顺序即输出顺序）
    column_list = ['Test Case ID', 'Rule Reference', 'Interpretation', 'Expected Result']

    # 输出路径
    output_file = "test_cases_output.xlsx"

    # 运行函数
    parse_test_cases(text_input, column_list, output_file)

import os
import re
import unicodedata
import pandas as pd
from docx import Document
from datetime import datetime

def normalize_text(s: str) -> str:
    if s is None:
        return ""
    s = unicodedata.normalize("NFKC", str(s))
    s = re.sub(r"[\u200B-\u200D\uFEFF]", "", s)
    return s.strip()

def extract_and_generate_word(excel_path, sheet_name, case_ids, output_path):
    if not os.path.exists(excel_path):
        raise FileNotFoundError(f"❌ Excel 文件路径不存在: {excel_path}")

    try:
        df = pd.read_excel(excel_path, sheet_name=sheet_name, header=None, engine="openpyxl", dtype=str)
    except Exception as e:
        raise Exception(f"❌ 加载 sheet 出错: {e}")

    doc = Document()
    doc.add_heading("Selected Test Cases Report", level=0)

    col_id = df.columns[0]
    col_desc = df.columns[3] if df.shape[1] > 3 else None
    col_cond = df.columns[4] if df.shape[1] > 4 else None
    col_exp = df.columns[5] if df.shape[1] > 5 else None

    hits = 0
    for case_id in case_ids:
        normalized_case_id = normalize_text(case_id)
        matched_rows = df[df[col_id].astype(str).apply(normalize_text) == normalized_case_id]

        if matched_rows.empty:
            print(f"⚠️ 未找到 Test Case ID: {case_id}")
            continue

        for _, row in matched_rows.iterrows():
            doc.add_heading(case_id, level=1)
            desc = normalize_text(row[col_desc]) if col_desc else ""
            cond = normalize_text(row[col_cond]) if col_cond else ""
            exp = normalize_text(row[col_exp]) if col_exp else ""

            doc.add_paragraph(f"Description:\n{desc}")
            doc.add_paragraph(f"Test Condition:\n{cond}")
            doc.add_paragraph(f"Expected Result:\n{exp}")
            doc.add_paragraph("")  # 空行分隔
            hits += 1

    if hits == 0:
        print("❌ 没有匹配任何 Test Case ID，Word 文件不会生成")
        return

    base, ext = os.path.splitext(output_path)
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    final_path = f"{base}_{timestamp}{ext}"
    doc.save(final_path)
    print(f"✅ Word 文件已保存至: {final_path}")
    return final_path

# ✅ 示例调用
if __name__ == "__main__":
    excel_path = r"C:\Users\h0a2\Desktop\Unit and Integration Test Case - FCRM Reporting_v0.1.xlsx"
    sheet_name = "Test Cases_Batch2b"
    case_ids = ["FCRM_Batch2b_02", "FCRM_Batch2b_07", "FCRM_Batch2b_10"]
    output_path = r"C:\Users\h0a2\Desktop\Selected_Test_Cases.docx"

    extract_and_generate_word(excel_path, sheet_name, case_ids, output_path)

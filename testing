WITH valid_balances AS (
  SELECT *
  FROM empf_ods.tb_account_balance bal
  WHERE
    bal.acct_type NOT IN ('RESERVE', 'FORFEITURE')
    AND bal.sub_acct_type NOT IN ('RESERVE', 'FORFEITURE')
    AND bal.record_last_updated_by <> 'INFORMATICA_DEL'
    AND bal.scheme_cd = 'RB'
)
SELECT
  pri.scheme_cd AS scheme_code,
  pri.fund_cd AS inv_fund,
  pri.efctv_date AS unit_price_dealing_date,
  SUM(bal.unit_count) AS total_unit,
  pri.bid_price_cnt AS unit_price,
  SUM(bal.unit_count * pri.bid_price_cnt) AS net_asset_value
FROM empf_ods.tb_fund_price pri
JOIN (
  SELECT *
  FROM (
    SELECT *,
      ROW_NUMBER() OVER (
        PARTITION BY sub_acct_type, fund_cd, mbr_acct_cd, pri_date
        ORDER BY eff_date DESC
      ) AS rn
    FROM (
      SELECT b.*, p.efctv_date AS pri_date
      FROM valid_balances b
      JOIN empf_ods.tb_fund_price p ON b.fund_cd = p.fund_cd AND b.eff_date <= p.efctv_date
      WHERE p.scheme_cd = 'RB' AND p.delete_flag = 'N'
    ) t
  ) x
  WHERE rn = 1
) bal ON pri.fund_cd = bal.fund_cd AND pri.efctv_date = bal.pri_date
WHERE pri.efctv_date BETWEEN '2025-04-07' AND '2025-04-13'
GROUP BY
  pri.scheme_cd,
  pri.fund_cd,
  pri.efctv_date,
  pri.bid_price_cnt
ORDER BY
  pri.fund_cd,
  pri.efctv_date DESC;


-- üîç Ë∞ÉËØïÂèÇÊï∞Ôºö
-- ÊõøÊç¢‰∏∫‰Ω†ÂÖ≥Ê≥®ÁöÑ NAV Êä•Ë°®Êó•Êúü & Âü∫Èáë‰ª£Á†Å
WITH nav_date_target AS (
  SELECT 
    DATE '2025-04-07' AS nav_date,   -- üëà Replace with your target NAV date
    'CRCPF' AS target_fund           -- üëà Replace with your fund code
),

-- 1Ô∏è‚É£ ÊâæÂá∫ËØ•Âü∫ÈáëÂú®ËØ• NAV Êó•Êúü‰∏ãÁöÑÊúâÊïàÂü∫Èáë‰ª∑Ê†ºËÆ∞ÂΩïÔºàÂøÖÈ°ªÂ≠òÂú®Ôºâ
valid_fund_price AS (
  SELECT *
  FROM tb_fund_price f
  JOIN nav_date_target t
    ON f.efctv_date = t.nav_date AND f.fund_cd = t.target_fund
  WHERE f.scheme_cd = 'RB'
    AND f.delete_flag = 'N'
),

-- 2Ô∏è‚É£ ÊâæÂá∫ÊâÄÊúâÁ¨¶ÂêàËØ• NAV Êó•ÊúüÊù°‰ª∂ÁöÑË¥¶Êà∑‰ΩôÈ¢ùËÆ∞ÂΩïÔºàÁî®‰∫é unit Ê±áÊÄªÔºâ
valid_account_balance AS (
  SELECT 
    b.*,
    ROW_NUMBER() OVER (
      PARTITION BY b.sub_acct_type, b.fund_cd, b.mbr_acct_cd
      ORDER BY b.eff_date DESC
    ) AS rn
  FROM tb_account_balance b
  JOIN nav_date_target t
    ON b.fund_cd = t.target_fund
  JOIN valid_fund_price p
    ON b.fund_cd = p.fund_cd
  WHERE b.scheme_cd = 'RB'
    AND b.acct_type NOT IN ('RESERVE', 'FORFEITURE')
    AND b.sub_acct_type NOT IN ('RESERVE', 'FORFEITURE')
    AND b.record_last_updated_by <> 'INFORMATICA_DEL'
    AND b.eff_date <= p.efctv_date
)

-- 3Ô∏è‚É£ ÊúÄÁªàËæìÂá∫ÊâÄÊúâË¢´ËÆ°ÂÖ• total_unit ÁöÑËÆ∞ÂΩï
SELECT 
  b.mbr_acct_cd,
  b.fund_cd,
  b.eff_date,
  b.unit_count,
  b.acct_type,
  b.sub_acct_type,
  b.delete_flag,
  b.record_last_updated_by,
  p.efctv_date AS nav_date,
  p.bid_price_cnt AS unit_price,
  b.unit_count * p.bid_price_cnt AS partial_nav
FROM valid_account_balance b
JOIN valid_fund_price p
  ON b.fund_cd = p.fund_cd
WHERE b.rn = 1
ORDER BY b.eff_date DESC;





-- 1. È¢ÑËøáÊª§ÂêàÊ≥ïË¥¶Êà∑ËÆ∞ÂΩï
WITH valid_balances AS (
  SELECT *
  FROM empf_ods.tb_account_balance bal
  WHERE
    bal.acct_type NOT IN ('RESERVE', 'FORFEITURE')
    AND bal.sub_acct_type NOT IN ('RESERVE', 'FORFEITURE')
    AND bal.record_last_updated_by <> 'INFORMATICA_DEL'
    AND bal.scheme_cd = 'RB'
    AND bal.delete_flag = 'N'
),

-- 2. ÁîüÊàêÊâÄÊúâ NAV Êó•‰∏éÂêàËßÑË¥¶Êà∑ËÆ∞ÂΩïÁöÑ‰∫§ÂèâÁªÑÂêàÔºàÂπ∂ÈôêÂà∂ eff_date ‚â§ efctv_dateÔºâ
balance_with_nav_date AS (
  SELECT
    b.*,
    p.efctv_date AS pri_date,
    p.bid_price_cnt
  FROM valid_balances b
  JOIN empf_ods.tb_fund_price p
    ON b.fund_cd = p.fund_cd
   AND b.eff_date <= p.efctv_date
  WHERE p.scheme_cd = 'RB'
    AND p.delete_flag = 'N'
),

-- 3. ÊØè‰∏™ NAV Êó• & Âü∫Èáë & Ë¥¶Êà∑ÁªÑÂêàÈÄâÂá∫ÊúÄÊé•ËøëÁöÑ‰∏ÄÊù°ËÆ∞ÂΩïÔºàeff_date ÊúÄÂ§ßÔºâ
latest_valid_balances AS (
  SELECT *
  FROM (
    SELECT *,
      ROW_NUMBER() OVER (
        PARTITION BY sub_acct_type, fund_cd, mbr_acct_cd, pri_date
        ORDER BY eff_date DESC
      ) AS rn
    FROM balance_with_nav_date
  ) ranked
  WHERE rn = 1
)

-- 4. Ê±áÊÄªÁîüÊàê NAV Êä•Ë°®
SELECT
  p.scheme_cd AS scheme_code,
  p.fund_cd AS inv_fund,
  p.efctv_date AS unit_price_dealing_date,
  SUM(b.unit_count) AS total_unit,
  p.bid_price_cnt AS unit_price,
  SUM(b.unit_count * p.bid_price_cnt) AS net_asset_value
FROM empf_ods.tb_fund_price p
JOIN latest_valid_balances b
  ON p.fund_cd = b.fund_cd
 AND p.efctv_date = b.pri_date
WHERE p.scheme_cd = 'RB'
  AND p.delete_flag = 'N'
  AND p.efctv_date BETWEEN DATE '2025-04-07' AND DATE '2025-04-13'
GROUP BY
  p.scheme_cd,
  p.fund_cd,
  p.efctv_date,
  p.bid_price_cnt
ORDER BY
  p.fund_cd,
  p.efctv_date DESC;





#########

Sub HighlightFRSFilteredNAVRecords()
    Dim ws As Worksheet
    Set ws = ActiveSheet

    ' --- Set input parameters ---
    Dim rng As Range
    Set rng = ws.Range("A37:K51") ' Data range (no header)

    Dim efctv_date As Date
    efctv_date = DateValue("2026-04-16") ' Target NAV date

    ' --- Column index definitions ---
    Const COL_DELETE_FLAG = 1
    Const COL_SCHEME_CD = 2
    Const COL_EMPLR_ACCT_CD = 3
    Const COL_PAYROLL_GROUP_ID = 4
    Const COL_MBR_ACCT_CD = 5
    Const COL_ACCT_TYPE = 6
    Const COL_SUB_ACCT_TYPE = 7
    Const COL_EFF_DATE = 8
    Const COL_FUND_CD = 9
    Const COL_UNIT_COUNT = 10
    Const COL_UPDATED_BY = 11

    ' --- Clear any existing highlights ---
    rng.Interior.Pattern = xlNone

    Dim i As Long
    Dim dict As Object
    Set dict = CreateObject("Scripting.Dictionary")
    Dim key As Variant

    ' --- Step 1: Build group-by dictionary for the latest eligible eff_date ‚â§ efctv_date ---
    For i = 1 To rng.Rows.Count
        Dim rowEffDate As Variant
        rowEffDate = rng.Cells(i, COL_EFF_DATE).Value

        If IsDate(rowEffDate) Then
            If CDate(rowEffDate) <= efctv_date Then
                Dim acct_type As String: acct_type = Trim(UCase(rng.Cells(i, COL_ACCT_TYPE).Value))
                Dim sub_acct_type As String: sub_acct_type = Trim(UCase(rng.Cells(i, COL_SUB_ACCT_TYPE).Value))
                Dim updated_by As String: updated_by = Trim(UCase(rng.Cells(i, COL_UPDATED_BY).Value))
                Dim delete_flag As String: delete_flag = Trim(UCase(rng.Cells(i, COL_DELETE_FLAG).Value))

                ' Exclude invalid records
                If acct_type <> "RESERVE" And acct_type <> "FORFEITURE" _
                And sub_acct_type <> "RESERVE" And sub_acct_type <> "FORFEITURE" _
                And updated_by <> "INFORMATICA_DEL" _
                And delete_flag = "N" Then

                    ' Build grouping key
                    key = sub_acct_type & "|" & rng.Cells(i, COL_FUND_CD).Value & "|" & rng.Cells(i, COL_MBR_ACCT_CD).Value

                    ' Keep only the latest eff_date per group
                    If Not dict.exists(key) Then
                        dict.Add key, i
                    Else
                        Dim prevRow As Long: prevRow = dict(key)
                        If rng.Cells(i, COL_EFF_DATE).Value > rng.Cells(prevRow, COL_EFF_DATE).Value Then
                            dict(key) = i
                        End If
                    End If
                End If
            End If
        End If
    Next i

    ' --- Step 2: Highlight retained rows ---
    Dim r As Long
    For Each key In dict.Keys
        r = dict(key)
        rng.Rows(r).Interior.Color = RGB(198, 239, 206) ' Light green
    Next key

    MsgBox "Highlighting complete. " & dict.Count & " rows selected.", vbInformation
End Sub
